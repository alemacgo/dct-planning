;;; Auto-generated PDDL file from prenex formula

(define (domain ramsey)

	(:constants
		zero
		max
	)

	(:predicates
		(begin_so-forall_t )
		(coin_t ?x0 ?x1)
		(f ?x0 ?x1)
		(free_domain_f ?x0)
		(free_range_f ?x0)
		(guess_f )
		(holds_and_33 )
		(holds_exists_1 ?x0)
		(holds_exists_13 ?x0 ?x1 ?x2)
		(holds_exists_14 ?x0 ?x1)
		(holds_exists_28 ?x0 ?x1 ?x2)
		(holds_exists_29 ?x0 ?x1)
		(holds_forall_15 ?x0 ?x1)
		(holds_forall_16 ?x0)
		(holds_forall_2 ?x0)
		(holds_forall_30 ?x0 ?x1)
		(holds_forall_31 ?x0)
		(holds_or_11 ?x0 ?x1 ?x2 ?x3)
		(holds_or_12 ?x0 ?x1 ?x2 ?x3)
		(holds_or_26 ?x0 ?x1 ?x2 ?x3)
		(holds_or_27 ?x0 ?x1 ?x2 ?x3)
		(holds_or_32 )
		(holds_so-exists_f )
		(holds_so-forall_t )
		(iterate_t )
		(not_f ?x0 ?x1)
		(not_k1 ?x0)
		(not_k2 ?x0)
		(not_t ?x0 ?x1)
		(so-forall_max_t ?x0)
		(so-forall_suc_t ?x0 ?x1)
		(so-forall_zero_t ?x0)
		(suc ?x0 ?x1)
		(t ?x0 ?x1)
		(begin)
		(holds_goal)
		(proof)
	)

	(:action establish_or_26_0
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (not_f ?x1 ?y1)  (proof))
		:effect		(and (holds_or_26 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_26_1
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (not_k2 ?y1)  (proof))
		:effect		(and (holds_or_26 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_26_2
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (not_f ?x2 ?y2)  (proof))
		:effect		(and (holds_or_26 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_26_3
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (not_k2 ?y2)  (proof))
		:effect		(and (holds_or_26 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_26_4
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (= ?x1 ?x2)  (proof))
		:effect		(and (holds_or_26 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_27_0
		:parameters	(?x1 ?y2 ?x2 ?y1)
		:precondition	 (and (holds_or_26 ?y2 ?x1 ?x2 ?y1)  (proof))
		:effect		(and (holds_or_27 ?x1 ?y2 ?x2 ?y1))
	)
	(:action establish_or_27_1
		:parameters	(?x1 ?y2 ?x2 ?y1)
		:precondition	 (and (not_t ?x1 ?x2)  (proof))
		:effect		(and (holds_or_27 ?x1 ?y2 ?x2 ?y1))
	)
	(:action establish_exists_28
		:parameters	(?y1 ?x1 ?x2 ?y2)
		:precondition	 (and (holds_or_27 ?x1 ?y2 ?x2 ?y1)  (proof))
		:effect		(and (holds_exists_28 ?y1 ?x1 ?x2))
	)
	(:action establish_exists_29
		:parameters	(?x2 ?x1 ?y1)
		:precondition	 (and (holds_exists_28 ?y1 ?x1 ?x2)  (proof))
		:effect		(and (holds_exists_29 ?x2 ?x1))
	)
	(:action establish_forall_30_base
		:parameters	(?x1)
		:precondition	 (and (holds_exists_29 zero ?x1)  (proof))
		:effect		(and (holds_forall_30 ?x1 zero) )
	)
	(:action establish_forall_30_inductive
		:parameters	(?x1 ?iv0 ?iv1)
		:precondition	(and (holds_forall_30 ?x1 ?iv0) (suc ?iv0 ?iv1) (holds_exists_29 ?iv1 ?x1)  (proof))
		:effect		(and   (holds_forall_30 ?x1 ?iv1))
	)
	(:action establish_forall_31_base
		:parameters	()
		:precondition	 (and (holds_forall_30 zero max)  (proof))
		:effect		(and (holds_forall_31 zero) )
	)
	(:action establish_forall_31_inductive
		:parameters	( ?iv0 ?iv1)
		:precondition	(and (holds_forall_31 ?iv0) (suc ?iv0 ?iv1) (holds_forall_30 ?iv1 max)  (proof))
		:effect		(and   (holds_forall_31 ?iv1))
	)
	(:action establish_or_11_0
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (not_f ?x1 ?y1)  (proof))
		:effect		(and (holds_or_11 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_11_1
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (not_k1 ?y1)  (proof))
		:effect		(and (holds_or_11 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_11_2
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (not_f ?x2 ?y2)  (proof))
		:effect		(and (holds_or_11 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_11_3
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (not_k1 ?y2)  (proof))
		:effect		(and (holds_or_11 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_11_4
		:parameters	(?y2 ?x1 ?x2 ?y1)
		:precondition	 (and (= ?x1 ?x2)  (proof))
		:effect		(and (holds_or_11 ?y2 ?x1 ?x2 ?y1))
	)
	(:action establish_or_12_0
		:parameters	(?x1 ?y2 ?x2 ?y1)
		:precondition	 (and (holds_or_11 ?y2 ?x1 ?x2 ?y1)  (proof))
		:effect		(and (holds_or_12 ?x1 ?y2 ?x2 ?y1))
	)
	(:action establish_or_12_1
		:parameters	(?x1 ?y2 ?x2 ?y1)
		:precondition	 (and (t ?x1 ?x2)  (proof))
		:effect		(and (holds_or_12 ?x1 ?y2 ?x2 ?y1))
	)
	(:action establish_exists_13
		:parameters	(?y1 ?x1 ?x2 ?y2)
		:precondition	 (and (holds_or_12 ?x1 ?y2 ?x2 ?y1)  (proof))
		:effect		(and (holds_exists_13 ?y1 ?x1 ?x2))
	)
	(:action establish_exists_14
		:parameters	(?x2 ?x1 ?y1)
		:precondition	 (and (holds_exists_13 ?y1 ?x1 ?x2)  (proof))
		:effect		(and (holds_exists_14 ?x2 ?x1))
	)
	(:action establish_forall_15_base
		:parameters	(?x1)
		:precondition	 (and (holds_exists_14 zero ?x1)  (proof))
		:effect		(and (holds_forall_15 ?x1 zero) )
	)
	(:action establish_forall_15_inductive
		:parameters	(?x1 ?iv0 ?iv1)
		:precondition	(and (holds_forall_15 ?x1 ?iv0) (suc ?iv0 ?iv1) (holds_exists_14 ?iv1 ?x1)  (proof))
		:effect		(and   (holds_forall_15 ?x1 ?iv1))
	)
	(:action establish_forall_16_base
		:parameters	()
		:precondition	 (and (holds_forall_15 zero max)  (proof))
		:effect		(and (holds_forall_16 zero) )
	)
	(:action establish_forall_16_inductive
		:parameters	( ?iv0 ?iv1)
		:precondition	(and (holds_forall_16 ?iv0) (suc ?iv0 ?iv1) (holds_forall_15 ?iv1 max)  (proof))
		:effect		(and   (holds_forall_16 ?iv1))
	)
	(:action establish_or_32_0
		:parameters	()
		:precondition	 (and (holds_forall_16  max)  (proof))
		:effect		(and (holds_or_32 ))
	)
	(:action establish_or_32_1
		:parameters	()
		:precondition	 (and (holds_forall_31  max)  (proof))
		:effect		(and (holds_or_32 ))
	)
	(:action establish_exists_1
		:parameters	(?y ?x)
		:precondition	 (and (f ?x ?y)  (proof))
		:effect		(and (holds_exists_1 ?y))
	)
	(:action establish_forall_2_base
		:parameters	()
		:precondition	 (and (holds_exists_1 zero)  (proof))
		:effect		(and (holds_forall_2 zero) )
	)
	(:action establish_forall_2_inductive
		:parameters	( ?iv0 ?iv1)
		:precondition	(and (holds_forall_2 ?iv0) (suc ?iv0 ?iv1) (holds_exists_1 ?iv1)  (proof))
		:effect		(and   (holds_forall_2 ?iv1))
	)
	(:action establish_and_33
		:parameters	()
		:precondition	(and (holds_forall_2  max) (holds_or_32 )  (proof))
		:effect		(and (holds_and_33 ) )
	)
	(:action set_true_f
		:parameters	(?x0 ?x1)
		:precondition	(and  (not_f ?x0 ?x1) (guess_f)  (free_domain_f ?x0)   (free_range_f ?x1) )
		:effect			(and (f ?x0 ?x1) (not  (not_f ?x0 ?x1))  (not  (free_domain_f ?x0) ) (not  (free_range_f ?x1) ))
	)
	(:action set_false_f
		:parameters	(?x0 ?x1)
		:precondition	(and (f ?x0 ?x1)  (guess_f) )
		:effect		(and  (not_f ?x0 ?x1) (not (f ?x0 ?x1))    (free_domain_f ?x0)  (free_range_f ?x1) )
	)
	(:action end_guess_f
		:precondition	 (guess_f) 
		:effect		(and (proof) (not (guess_f) ))
	)
	(:action establish_soexist_f
		:precondition	(and (holds_and_33 ))
		:effect	(and (not (holds_and_33 )) (holds_so-exists_f)  (not (proof))
				(forall () (not (holds_or_32 )))
				(forall (?ivDel0) (not (holds_forall_16 ?ivDel0)))
				(forall (?ivDel0 ?ivDel1) (not (holds_forall_30 ?ivDel0 ?ivDel1)))
				(forall (?ivDel0) (not (holds_forall_31 ?ivDel0)))
				(forall (?ivDel0 ?ivDel1) (not (holds_forall_15 ?ivDel0 ?ivDel1)))
				(forall (?ivDel0 ?ivDel1 ?ivDel2) (not (holds_exists_13 ?ivDel0 ?ivDel1 ?ivDel2)))
				(forall (?ivDel0 ?ivDel1 ?ivDel2 ?ivDel3) (not (holds_or_26 ?ivDel0 ?ivDel1 ?ivDel2 ?ivDel3)))
				(forall (?ivDel0) (not (holds_forall_2 ?ivDel0)))
				(forall (?ivDel0 ?ivDel1) (not (holds_exists_14 ?ivDel0 ?ivDel1)))
				(forall (?ivDel0) (not (holds_exists_1 ?ivDel0)))
				(forall (?ivDel0 ?ivDel1 ?ivDel2 ?ivDel3) (not (holds_or_12 ?ivDel0 ?ivDel1 ?ivDel2 ?ivDel3)))
				(forall () (not (holds_and_33 )))
				(forall (?ivDel0 ?ivDel1) (not (holds_exists_29 ?ivDel0 ?ivDel1)))
				(forall (?ivDel0 ?ivDel1 ?ivDel2) (not (holds_exists_28 ?ivDel0 ?ivDel1 ?ivDel2)))
				(forall (?ivDel0 ?ivDel1 ?ivDel2 ?ivDel3) (not (holds_or_27 ?ivDel0 ?ivDel1 ?ivDel2 ?ivDel3)))
				(forall (?ivDel0 ?ivDel1 ?ivDel2 ?ivDel3) (not (holds_or_11 ?ivDel0 ?ivDel1 ?ivDel2 ?ivDel3))))
	)
	(:action zero_plus_one_t
		:parameters	(?x0 ?x1)
		:precondition	(and (coin_t ?x0 ?x1) (not_t ?x0 ?x1) (iterate_t)  )
		:effect			(and (not (coin_t ?x0 ?x1)) (not (not_t ?x0 ?x1)) (t ?x0 ?x1) (guess_f) )
	)
	(:action one_plus_one_0_t
		:parameters	(?x0 ?iv0 ?iv1)
		:precondition	(and  (iterate_t) (coin_t ?x0 ?iv0) (t ?x0 ?iv0)  (so-forall_suc_t ?iv0 ?iv1) )
		:effect			(and (not (coin_t ?x0 ?iv0)) (not (t ?x0 ?iv0)) (not_t ?x0 ?iv0) (coin_t ?x0 ?iv1) )
	)
	(:action one_plus_one_1_t
		:parameters	( ?iv0 ?iv1 ?ivmax0 ?ivzero0)
		:precondition	(and (iterate_t) (coin_t  ?iv0 ?ivmax0) (t  ?iv0 ?ivmax0)  (so-forall_suc_t ?iv0 ?iv1)(so-forall_max_t ?ivmax0)(so-forall_zero_t ?ivzero0))
		:effect	(and (not (coin_t  ?iv0 ?ivmax0)) (not (t  ?iv0 ?ivmax0)) (not_t  ?iv0 ?ivmax0) (coin_t  ?iv1 ?ivzero0) )
	)
	(:action one_plus_one_final_t
		:parameters (?ivmax0  ?ivmax1)
		:precondition	(and (iterate_t) (coin_t ?ivmax0  ?ivmax1) (t ?ivmax0  ?ivmax1) (so-forall_max_t ?ivmax0) (so-forall_max_t  ?ivmax1))
		:effect	(and (not (iterate_t) ) (not (coin_t  ?ivmax0  ?ivmax1)) (not (t ?ivmax0  ?ivmax1)) (not_t ?ivmax0  ?ivmax1) (holds_so-forall_t) )
	)
	(:action change_for_coin_t
		:parameters (?ivzero0  ?ivzero1)
		:precondition	(and (iterate_t) (holds_so-exists_f)(so-forall_zero_t ?ivzero0) (so-forall_zero_t  ?ivzero1))
		:effect	(and (not (holds_so-exists_f)) (coin_t ?ivzero0  ?ivzero1) )
	)
	(:action init_so-forall_t
		:precondition	(and (iterate_t) (begin_so-forall_t))
		:effect	(and (not (begin_so-forall_t)) (guess_f) )
	)
	(:action begin-proof
		:precondition	(begin)
		:effect		 (and (iterate_t) (begin_so-forall_t)  (not (begin)))
	)
	(:action prove-goal
		:precondition	 (and (holds_so-forall_t))
		:effect		(holds_goal)
	)
)